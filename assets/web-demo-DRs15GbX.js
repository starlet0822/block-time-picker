import{r as a,a as W,c as z,w as o,E as I,b as x,o as b,d as s,e as t,f as y,g as A,h as n,t as i,m as E,u as p,p as B,F as T,i as G,j as J,k as K,l as Q,q as X,n as Y,s as Z}from"./index-yT6oASrY.js";const $={class:"flex-c"},h={class:"my-2"},le={__name:"web-demo",setup(ee){const c=a(["09:00","18:00"]),f=a([]),_=a([]),v=a([]),g=a([]),j=a(["09:00","23:59"]),U=a(["09:30","18:30"]),F=a(["09:40","16:00"]),H=a(["09:45","13:30"]),L=a(["09:50","12:30"]),P={10:"10分",15:"15分",20:"20分",30:"30分",60:"60分"},k=W({minHour:"0",maxHour:"23",step:30,activeColor:"#FFCD5E",readonly:!0,disabledBefore:!0}),V=new Map([[10,L],[15,H],[20,F],[30,U],[60,j]]),r=u=>u.length?u.join(" ~ "):"-";function R(u){return V.get(+u).value}const D=(u,e)=>{V.get(+e).value=u};return(u,e)=>{const C=Q,N=K,w=Y,S=x("RouterLink"),q=J,d=A,m=x("WebTimePicker"),M=I;return b(),z(M,{shadow:"never"},{header:o(()=>[t(q,{type:"flex",align:"middle",justify:"space-between"},{default:o(()=>[s("div",$,[e[7]||(e[7]=n(" 块状时间段选择组件(web端)  ")),t(N,{trigger:"click"},{content:o(()=>e[5]||(e[5]=[s("p",null,[n(" 操作交互逻辑："),s("br"),n(" 1.当选择了某一节，点击该节之前则是选择开始时间，点击该节之后则是选择结束时间；"),s("br"),n(" 2.开始和结束时间均选择完毕，选择高亮区域之前则重置，选择高亮区域之后则是重新选择结束时间；"),s("br"),n(" 3.开始和结束时间均选择完毕，往前选择则重置，往后选择则是选择结束时间；"),s("br"),n(" 3.开始和结束时间均选择完毕，点击高亮区域中间（不含第一节或最后一节），则是重新选择结束时间；"),s("br"),n(" 4.开始和结束时间均选择完毕，点击高亮区域第一节或最后一节均是取消选择该时间。"),s("br")],-1)])),default:o(()=>[t(C,{class:"cursor-pointer"},{default:o(()=>[t(p(X))]),_:1})]),_:1}),t(S,{to:"/mobie-demo"},{default:o(()=>[t(w,{class:"ml-2"},{default:o(()=>e[6]||(e[6]=[n("查看移动端(mobie)版本")])),_:1})]),_:1})]),t(w,{href:"https://github.com/starlet0822/block-time-picker",target:"_blank"},{default:o(()=>[t(C,{size:"14",class:"mr-1 align-middle"},{default:o(()=>[t(p(Z))]),_:1}),e[8]||(e[8]=n("github 地址 "))]),_:1})]),_:1})]),default:o(()=>[s("div",null,[t(d,{"content-position":"left"},{default:o(()=>[n(" 基础使用: 已选时间 "+i(r(f.value)),1)]),_:1}),t(m,{modelValue:f.value,"onUpdate:modelValue":e[0]||(e[0]=l=>f.value=l)},null,8,["modelValue"]),t(d,{"content-position":"left"},{default:o(()=>[n(" 默认选中时间: 已选时间 "+i(r(c.value)),1)]),_:1}),t(m,{modelValue:c.value,"onUpdate:modelValue":e[1]||(e[1]=l=>c.value=l)},null,8,["modelValue"]),t(d,{"content-position":"left"},{default:o(()=>[n(" 自定义选中高亮颜色（activeColor） 已选时间 "+i(r(_.value)),1)]),_:1}),t(m,E({modelValue:_.value,"onUpdate:modelValue":e[2]||(e[2]=l=>_.value=l)},p(B)(k,["activeColor"])),null,16,["modelValue"]),t(d,{"content-position":"left"},{default:o(()=>[n(" 指定可选范围（minHour：9，maxHour: 18） 已选时间 "+i(r(v.value)),1)]),_:1}),t(m,{modelValue:v.value,"onUpdate:modelValue":e[3]||(e[3]=l=>v.value=l),"min-hour":9,"max-hour":18},null,8,["modelValue"]),t(d,{"content-position":"left"},{default:o(()=>[n(" 只读（readonly）和禁用过去时间（disabledBefore） 已选时间 "+i(r(g.value)),1)]),_:1}),t(m,E({modelValue:g.value,"onUpdate:modelValue":e[4]||(e[4]=l=>g.value=l)},p(B)(k,["readonly","disabledBefore"])),null,16,["modelValue"]),t(d,{"content-position":"left"},{default:o(()=>e[9]||(e[9]=[n("自定义时间间隔（step: 60|30|20|15|10）")])),_:1}),(b(!0),y(T,null,G(Object.keys(P).reverse(),l=>(b(),y(T,{key:l},[s("p",h,"每隔 "+i(l)+" 分钟 已选时间："+i(r(R(l))),1),t(m,{"model-value":R(l),step:l,onChange:O=>D(O,l)},null,8,["model-value","step","onChange"])],64))),128))])]),_:1})}}};export{le as default};
